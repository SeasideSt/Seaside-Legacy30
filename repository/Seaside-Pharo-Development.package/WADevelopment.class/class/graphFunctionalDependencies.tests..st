tools
graphFunctionalDependencies: functionalBool tests: testsBool
	| packages analyzer |
	packages := self packages.
	testsBool ifFalse: [
		packages := packages reject: [ :each |
			each packageName includesSubString: '-Tests-' ] ].
	
	analyzer := ((Smalltalk classNamed: #PDPackageAnalyzer) onPackages: packages).
	functionalBool ifTrue: [
		WAPackage packages
			do: [ :package |
				package dependencies do: [ :dep |
					| source target |
					source := analyzer relation packageNamed: package name ifAbsent: [ nil ].
					target := analyzer relation packageNamed: dep name ifAbsent: [ nil ].
					(source notNil and: [ target notNil ]) ifTrue: [
						source add: ((Smalltalk classNamed: #PDFunctionalDependency)
							from: source
							to: target) ] ] ]
			displayingProgress: 'Adding functional dependencies' ].
	analyzer save: 'seaside.dot'